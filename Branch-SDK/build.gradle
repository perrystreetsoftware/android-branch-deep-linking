apply plugin: 'com.android.library'

//File name for out put jar created
def jarFileName

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile "com.android.support:support-annotations:$supportLibraryVersion"
    compile 'com.crashlytics.sdk.android:answers-shim:0.0.6'

    // This is an optional dependency
    // Please note that the Branch SDK does not require Firebase to operate. This dependency is listed here so there will not be build errors,
    // but the library is *not* added to your app unless you do so yourself. Please check the code in gradle-mvn-push script to see how this works
    compile "com.google.firebase:firebase-appindexing:$playServicesVersion"
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    publishNonDefault true

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName '2.12.0'
        versionCode 1
    }

    buildTypes {
        debug {
            buildConfigField "String", "SERVER_URL", rootProject.ext.branchioDebugAppServerUrl
        }
        release {
            buildConfigField "String", "SERVER_URL", rootProject.ext.branchioReleaseAppServerUrl
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['resources']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

//------------- Jar Generation code. ---------------//
//Run makeJar to create a jar file for SDK to the route directory
android {
    lintOptions {
        abortOnError false
    }
    buildToolsVersion rootProject.ext.buildToolsVersion
}

task clearJar(type: Delete) {
    delete 'build/libs/'+ jarFileName
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/default/')
    into('../')
    include('classes.jar')
    rename ('classes.jar', 'Branch-'+project.VERSION_NAME+'.jar')
}

makeJar.dependsOn(clearJar, build)

apply from: 'https://raw.githubusercontent.com/BranchMetrics/GradleToMavenOptionalDependencies/master/gradle-maven-push.gradle'
